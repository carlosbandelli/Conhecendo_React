Props e organização dos componentes
Vou criar um pasta no src chamada de components.
e dentro dessa pasta criou outrea pasta para com o nome do compoenete nesse caso PostCard
e dentro dessa pasta crio um arquivo chamado index.jsx
o que é um compoente react?

O componente react é uma classe que tem o metodo render e retorna .jsx ou uma função que retorna tambem jsx
então eu posso criar compoente de classe ou compoente de função tanto faz.


então eu crio um export pois eu preciso importar isso em algum lugar
ficando assim

-------------------------------------------------------------
export const PostCard = () => {
    return (
        <div className="post">
          <img src={post.cover} alt={post.title}/>
          <div key={post.id} className="post-content">
            <h1>{post.title}</h1>
            <p>{post.body}</p>
          </div>
        </div>
    )
}
------------------------------------------------------------

Se nos percebemos nos nao temos post dentro de código da onde esta vindo esse post

export const PostCard = () * dentro desse parentese é on de eu entro com a props, são as propeidades qeu eu passo pra esse componente
que na verdade são atributos do jsx que eu passo para dentro desse compoentes
Como funciona?
Nessa função eu posso receber props *export const PostCard = (props)*, seu recebo um objeto
 e volto no meu App e quero substituir todas a tag html pelo minha nova tag HTML
Como meu post card ja esta sendo exportado, eu posso usar o recurso do VS CODE, começa escrever o nome do meu componente
e ela ja encontra para mim, e ele importa rapidamente para voce.

-----------------------Código Antes:-----------------------------


import './App.css';
import { Component } from 'react';

class App extends Component {
  state = {    
    posts: [
      
    ]
  };

  
  componentDidMount(){
    this.loadPosts()
  }

  loadPosts = async () => {
    const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts')
    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos')
    
    const [posts, photos] = await Promise.all([postsResponse, photosResponse])

    const postsJson = await posts.json()
    const photosJson = await photos.json()

    const postsAndPhotos = postsJson.map((post, index) => {
      return { ...post, cover: photosJson[index].url }
    })
    

    this.setState({ posts: postsAndPhotos })
  }

  

  render() {
    const { posts } = this.state

    return (
     <section className="container">
        <div className="posts">        
          {posts.map(post => (
		<div className="post">
          <img src={post.cover} alt={post.title}/>
          <div key={post.id} className="post-content">
            <h1>{post.title}</h1>
            <p>{post.body}</p>
          </div>
        </div>
        
          ))}
        </div>
     </section>      
    );
  }
}




export default App;
-----------------------------------------------------------------------------------------------------
 ---------------------Código depois-------------------------


import './App.css';
import { Component } from 'react';

class App extends Component {
  state = {    
    posts: [
      
    ]
  };

  
  componentDidMount(){
    this.loadPosts()
  }

  loadPosts = async () => {
    const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts')
    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos')
    
    const [posts, photos] = await Promise.all([postsResponse, photosResponse])

    const postsJson = await posts.json()
    const photosJson = await photos.json()

    const postsAndPhotos = postsJson.map((post, index) => {
      return { ...post, cover: photosJson[index].url }
    })
    

    this.setState({ posts: postsAndPhotos })
  }

  

  render() {
    const { posts } = this.state

    return (
     <section className="container">
        <div className="posts">        
          {posts.map(post => (
            <PostCard/> <----tag acrescentada
          ))}
        </div>
     </section>      
    );
  }
}




export default App;
---------------------------------------------------------------------------
ele vai ter atributo, o atributo que passar aqui vai vir como props
Ou seja quando eu colocar o nome atributo ele recebe a props do meu componente
se eu passasse outra coisa eu teria outra chave dentro desse objeto com outro valor
Por exemplo, se eu passo title = {post.title}
Ficando o código assim:


import './App.css';
import { Component } from 'react';

class App extends Component {
  state = {    
    posts: [
      
    ]
  };

  
  componentDidMount(){
    this.loadPosts()
  }

  loadPosts = async () => {
    const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts')
    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos')
    
    const [posts, photos] = await Promise.all([postsResponse, photosResponse])

    const postsJson = await posts.json()
    const photosJson = await photos.json()

    const postsAndPhotos = postsJson.map((post, index) => {
      return { ...post, cover: photosJson[index].url }
    })
    

    this.setState({ posts: postsAndPhotos })
  }

  

  render() {
    const { posts } = this.state

    return (
     <section className="container">
        <div className="posts">        
          {posts.map(post => (
            <PostCard
              title={post.title} <-----
              body={post.body} <-----
              id={post.id} <------
              cover={post.cover} <-----
            />
          ))}
        </div>
     </section>      
    );
  }
}

àpos isso volta para o nosso css, eu preciso pegar a variavel de post
para isso eu faço o seguinte
-----------------------------------Código-----------------------
export const PostCard = ({post}) => { //----> 3ªº usando destructuring - pegando post diretamento de props
    //const post = props.post --> 1ª forma de fazer
    //const {post} = props --> 2ª forma de fazer usando destructuring
    return (
        <div className="post">
          <img src={post.cover} alt={post.title}/>
          <div key={post.id} className="post-content">
            <h1>{post.title}</h1>
            <p>{post.body}</p>
          </div>
        </div>
    )
}
------------------------------Código----------------------------------


export default App;

Obs: A key que esta no css tem que ser tirada dela e implementar no postCard (no caso a tag como exemplo)



